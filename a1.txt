Script started on Fri 31 May 2013 11:43:23 PM EDT
^[[A^[[Ahkim142@matrix:~/oop244/ass1> exitg++ a1test.cpp ISBN.cpp ISBNPrefix.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccat ISBNPrefix.h ISBNPrefix.cpp ISBN.h ISBN.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cwhoami[Kcat ISBNPrefix.h ISBNPrefix.cpp ISBN.h ISBN.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cwhoami[K
hkim142
hkim142@matrix:~/oop244/ass1> whoamiexit[Kg++ a1test.cpp ISBN.cpp ISBNPrefix.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccat ISBNPrefix.h ISBNPrefix.cpp ISBN.h ISBN.cpp
FILE* open(const char filename[]);
int isRegistered(FILE*fp, int area);
int minNoDigits(FILE* fp, int area);
int isRegistered(FILE* fp, int area, const char publisher[]);
int close(FILE* fp);#include <stdio.h>
#include <string.h>
#include <iostream>
#include <stdlib.h>
#include"ISBNPrefix.h"
using namespace std;
FILE* open(const char filename[]){
    FILE* fp;

if(filename != NULL){
	fp=fopen(filename,"r");
	return fp;
}
else{
	fp=NULL;
	return fp;
}
}

int isRegistered(FILE* fp, int area){
	int a;
    int ps,pl;
    int ck=0;
    if(fp!=NULL){
		rewind(fp);
        fscanf(fp,"%d%d%d",&a,&ps,&pl);
        if (a == area){
			ck=1;
		}
	}
    return ck;
}

int minNoDigits(FILE* fp, int area){
    int a, minno=0;
    char ps[10],pl[10];
    if(fp!=NULL){
        rewind(fp);
		while(!feof(fp) && minno==0){
            fscanf(fp,"%d%s%s",&a,&ps,&pl);
            if(a==area){
                minno=2;
			}
			else if(area>a){
				minno=1;
			}
			else if(area<a){
				minno=0;
			}
		}
	}

return minno;
}

int isRegistered(FILE* fp, int area, const char p[]){
	int a;
    int ck=0;
	int minck;
    char pu[10],pl[10];
    int is,il,ii;
    if(fp !=NULL){
		rewind(fp);		
        fscanf(fp,"%d%s%s",&a,pu,pl);
        if(a == area){
            if(strlen(p)==strlen(pu)){
				if((strcmp(p,pu) >=0) && (strcmp(p,pl)<=0)){
					ck=1;
				}
			}
		}//a==area;
	}// if !=NULL
    return ck;
}

int close(FILE* fp){
	int ck=0;
	if(fp!=NULL){
		fclose(fp);
		ck=1;
	}
	return ck;
}
int isValid(const char str[]);
int isRegistered(FILE* fp, const char str[], char area[], char publisher[],char title[]);
#include <iostream>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "ISBN.h"
#include "ISBNPrefix.h"
using namespace std;
int isValid(const char str[]){
	int total=0;
	int ck=0;
	int c=0;
	if (str!=NULL){
	for(int i=0;i<10;i++){
		total+=(str[i]-'0')*(10-i);
	}
	c=total%11;
		if(c==0){
			ck=1;
		}
	}
		return ck;
}
int isRegistered(FILE* fp, const char str[], char area[], char publisher[],char title[]){
	int ck=0,ck2=0,ck3=0,temp,mck,x=0;
	int c;
	if (str!=NULL && fp!=NULL){
		if(isValid(str)==1){
for(int i=0;i<5;i++){
	area[i]=str[i];
	area[i+1]='\0';
	temp=isRegistered(fp,atoi(area));
	if(!temp==1){
		x=i;
		i=5;
		ck2=1;
		temp=0;
	}
}//for for area
mck=minNoDigits(fp,atoi(area));
if(ck2==1){
for(int i=0;i<7;i++){
	publisher[i]=str[x+i];
	publisher[i+1]='\0';
	temp=isRegistered(fp,atoi(area),publisher);
	if(!temp==1){
		i=mck+1;
		ck3=1;
	}
}//for for publisher
}//trigger
if(ck2 && ck3){
	ck=1;
}//trigger no2.
	return ck;
		}
	}
}hkim142@matrix:~/oop244/ass1> cat ISBNPrefix.h ISBNPrefix.cpp ISBN.h ISBN.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cwhoami[Kcat ISBNPrefix.h ISBNPrefix.cpp ISBN.h ISBN.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kcat ISBNPrefix.h ISBNPrefix.cpp ISBN.h ISBN.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cwhoami[Kexit[Kg++ a1test.cpp ISBN.cpp ISBNPrefix.cpp
hkim142@matrix:~/oop244/ass1> a1
If 'a1' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf a1
hkim142@matrix:~/oop244/ass1> a1.out
If 'a1.out' is not a typo you can use command-not-found to lookup the package that contains it, like this:
    cnf a1.out
hkim142@matrix:~/oop244/ass1> aout[K[K[K.out

Prefix Tests
============
Passed test    1 (open(NULL))
Passed test    2 (open(PREFIX))
Passed test    3 (area isRegistered(fp, -1))
Passed test    4 (area isRegistered(fp, 99955))
Passed test    5 (area isRegistered(fp, 0))
Passed test    6 (area-publisher isRegistered(fp, -1, "0"))
Passed test    7 (area-publisher isRegistered(fp, 99955, "0"))
Passed test    8 (area-publisher isRegistered(fp, 0, "10"))
Passed test    9 (area-publisher isRegistered(fp, 99955, "0"))
Passed test   10 (minNoDigits(fp, -1))
Passed test   11 (minNoDigits(fp, 0))
Passed test   12 (minNoDigits(fp, 92))

Prefix Tests passed!

ISBN Tests
==========
Passed test   13 (valid(NULL))
Passed test   14 (valid(""))
Passed test   15 (valid("9070002043"))
Passed test   16 (valid("9070002046"))

ISBN Tests passed!

ISBN/Prefix Tests
=================
exit
^C
hkim142@matrix:~/oop244/ass1> exit
exit

Script done on Fri 31 May 2013 11:44:22 PM EDT
